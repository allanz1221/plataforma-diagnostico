"""
Django settings for diagnostico_project project.

Generated by 'django-admin startproject' using Django 2.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from os.path import join, dirname
from dotenv import load_dotenv

# Load variables from env file
dotenv_path = join(dirname(__file__), '.env')
load_dotenv(dotenv_path)
load_dotenv(verbose=True)

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'efp5uc0a02-y&erf^9)!oq*z-0-g8ng(@r8ep7s*86a!mq+vwb'

# SECURITY WARNING: don't run with debug turned on in production!
is_production = False

if os.getenv('PRODUCTION', 'false').lower() == 'true':
    is_production = True

DEBUG = not is_production

ALLOWED_HOSTS = ['*']
INTERNAL_IPS = '127.0.0.1'

# Application definition

INSTALLED_APPS = [
    # apps
    'users.apps.UsersConfig',

    'core.apps.CoreConfig',
    'exam.apps.ExamConfig',
    'support.apps.SupportConfig',
    'documents.apps.DocumentsConfig',
    'student_card.apps.StudentCardConfig',

    # extras
    'core.templatetags.core_extras',
    'exam.templatetags.exam_extras',
    'documents.templatetags.documents_extras',

    # 3rd party
    'django_celery_results',
    'djcelery_email',
    'crispy_forms',
    'pydjax',
    'phonenumber_field',

    # django apps
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # debug toolbar
    'debug_toolbar',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # debug toolbar
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'diagnostico_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'diagnostico_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DEFAULT_DATABASE_HOST = 'db' if not DEBUG else '127.0.0.1'
DATABASES = {
   'default': {
       'ENGINE': 'django.db.backends.postgresql',
       'NAME': os.getenv('POSTGRES_NAME'),
       'USER': os.getenv('POSTGRES_USER'),
       'PASSWORD': os.getenv('POSTGRES_PASSWORD'),
       'HOST': DEFAULT_DATABASE_HOST,
       'PORT': '5432'
   }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'es-mx'

TIME_ZONE = 'MST'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/diagnostico/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, 'static'),
]

# Media
MEDIA_URL = '/diagnostico/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

# Custom user model
AUTH_USER_MODEL = 'users.Candidate'

# Auth redirect
LOGIN_URL = 'login'
LOGIN_REDIRECT_URL = 'core:dashboard'
LOGOUT_REDIRECT_URL = 'core:home'

# Crispy templates
CRISPY_TEMPLATE_PACK = 'bootstrap4'

# Email
if not DEBUG:
    CELERY_BROKER_URL = 'amqp://{}:{}@rabbit:5672//'.format(os.getenv('RABBITMQ_DEFAULT_USER'),
                                                            os.getenv('RABBITMQ_DEFAULT_PASS'))

CELERY_RESULT_BACKEND = 'django-db'
CELERY_EMAIL_CHUNK_SIZE = 1
CELERY_EMAIL_TASK_CONFIG = {
    'name': 'djcelery_email_send',
    'ignore_result': False,
}
# CELERY_EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'  # console
CELERY_EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'  # smtp

EMAIL_BACKEND = 'djcelery_email.backends.CeleryEmailBackend'
EMAIL_HOST = os.getenv('EMAIL_HOST')
EMAIL_HOST_USER = os.getenv('EMAIL_FROM')
DEFAULT_FROM_EMAIL = os.getenv('EMAIL_FROM')
EMAIL_FROM = os.getenv('EMAIL_FROM')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')
EMAIL_PORT = os.getenv('EMAIL_PORT')
EMAIL_USE_TLS = True

# MathJax
MATHJAX_ENABLED = True # to enable mathjax on your django project
MATHJAX_CONFIG_FILE = "TeX-AMS-MML_HTMLorMML"
MATHJAX_CONFIG_DATA = {
    "tex2jax": {
      "inlineMath":
    [
        ['$','$'],
        ['\\(','\\)']
    ]
    }
}

# custom settings
CONFIGURED_HOST = os.getenv('CONFIGURED_HOST')
